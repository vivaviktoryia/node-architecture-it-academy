C:\Windows\System32\drivers\etc\hosts - can be managed
# localhost name resolution is handled within DNS itself.
127.0.0.1       localhost
127.0.0.2       voting
127.0.0.3       validation
::1             localhost


// Installation MAriaDb on remote server (ubuntu/linux)
sudo systemctl status mariadb

sudo nano /etc/apt/sources.list

sudo nano /etc/apt/sources.list.d/mariadb.list
SHOW VARIABLES LIKE 'lower_case_table_names';

ALTER USER 'root'@'localhost' IDENTIFIED BY 'lexus_ita';
FLUSH PRIVILEGES;

sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf
// NOTE! LINUX - case sensitive!!! Change from 0 to 1 to avoid this issue!
lower_case_table_names = 1


// Request Body Parser - Middleware
express.json({ limit: '10kb' }); // content-type: application/json -> JSON.parse(req.body)
express.text(); // content-type: text/plain -> parse req.body
xmlBodyParser // content-type: application/xml -> parse req.body (see in utils/parseData.js)

// maridb flow - docker
mysql -u root -p
CREATE USER 'amcm_user'@'%' IDENTIFIED BY 'qwerty123456';
CREATE DATABASE amcm_db;
GRANT ALL PRIVILEGES ON amcm_db.* TO 'amcm_user'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

select user, host from mysql.user;
// maridb flow - locally
mysql -u root -p

CREATE USER 'strapi_user'@'localhost' IDENTIFIED BY 'qwerty123456';
CREATE DATABASE strapi_db;
GRANT ALL PRIVILEGES ON strapi_db.* TO 'strapi_user'@'localhost';
FLUSH PRIVILEGES;

SHOW GRANTS FOR 'strapi_user'@'localhost';
EXIT;

// display all users
SELECT User, Host FROM mysql.user;
USE strapi_db;

// remove grants
REVOKE GRANT OPTION ON *.* FROM 'strapi_user'@'%';

# Certificate
openssl version

# Root Certificate (CA): ssl-ca
openssl genrsa 2048 > ca-key.pem
openssl req -new -x509 -days 365 -key ca-key.pem -out ca-cert.pem

# server certificate: ssl-cert: ssl-key:
openssl genrsa 2048 > server-key.pem
openssl req -new -key server-key.pem -out server-req.pem
openssl x509 -req -in server-req.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -days 365

# client certificate
openssl genrsa 2048 > client-key.pem
openssl req -new -key client-key.pem -out client-req.pem
openssl x509 -req -in client-req.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out client-cert.pem -days 365

# mariadb
[mysqld]
ssl-ca=/path/to/ca-cert.pem 
ssl-cert=/path/to/server-cert.pem
ssl-key=/path/to/server-key.pem
