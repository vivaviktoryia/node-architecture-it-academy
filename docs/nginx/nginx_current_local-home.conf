
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;

# graceful reload (zero-time deployment)
events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # Enabling gzip compression
    gzip  on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;
    gzip_http_version 1.1;

    # Setting up caching for proxied data
    proxy_cache_path D:/nginx-1.26.2/nginx-1.26.2/cache levels=1:2 keys_zone=my_cache:10m inactive=60m max_size=1g;

    server {
        listen       100;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # Proxy for dynamic requests
         location / {
            proxy_pass http://localhost:7181;  # The port Express listens on
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Setting up caching of responses from a proxied server
            # proxy_cache my_cache;
            proxy_cache off;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating;
            proxy_cache_background_update on;
            
        }

        # Caching static files   
        # Path to static files
        location /public/ {
            root C:/Users/user/Desktop/code/GitHub/node-architecture-it-academy/final-project;            
            expires 3d;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            try_files $uri $uri/ C:/Users/user/Desktop/code/GitHub/node-architecture-it-academy/final-project/public/js/parcel/bundle.js =404;  
        }

        # Static files with caching
         location /img/ {
            root C:/Users/user/Desktop/code/GitHub/node-architecture-it-academy/final-project/public;
            expires 30d;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
   

    # Proxy server for backend if it is not available
    # server {
    #     listen 80;
    #     server_name localhost;

    #     location / {
    #         proxy_pass http://localhost:7180;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;

    #         # Enabling caching on proxied requests
    #         proxy_cache my_cache;
    #         proxy_cache_valid 200 1h;
    #         proxy_cache_valid 404 1m;
    #         proxy_cache_use_stale error timeout updating;
    #         proxy_cache_background_update on;
    #     }

        
    # }

}
